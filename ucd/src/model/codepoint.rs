use serde::{Deserialize, Serialize};

use super::{
    bidi_class::BidiClass, bidi_paired_bracket_type::BidiPairedBracketType, block::Block,
    decomposition_type::DecompositionType, east_asian_width::EastAsianWidth,
    general_category::GeneralCategory, grapheme_cluster_break::GraphemeClusterBreak,
    hangul_syllable_type::HangulSyllableType, indic_positional_category::IndicPositionalCategory,
    indic_syllabic_category::IndicSyllabicCategory, jamo_short_name::JamoShortName,
    joining_group::JoiningGroup, joining_type::JoiningType, linebreak::Linebreak,
    numeric_type::NumericType, numeric_value::NumericValue, script::Script,
    sentence_break::SentenceBreak, word_break::WordBreak, yn::YN,
};

#[derive(Serialize, Deserialize, Clone, Debug)]
#[serde(rename_all = "camelCase")]
pub struct Codepoint {
    pub age: String,
    pub alphabetic: bool,
    pub ascii_hex_digit: bool,
    pub bidi_class: BidiClass,
    pub bidi_control: bool,
    pub bidi_m: bool,
    pub bidi_mirrored_glyph: Option<u32>,
    pub bidi_paired_bracket: u32,
    pub bidi_paired_bracket_type: BidiPairedBracketType,
    pub block: Block,
    pub case_ignorable: bool,
    pub cased: bool,
    pub code_point: u32,
    pub combining_class: u32,
    pub composition_exclusion: bool,
    pub composition_exclusion_full: bool,
    pub dash: bool,
    pub decomposition: Vec<u32>,
    pub decomposition_type: DecompositionType,
    pub default_ignorable_code_point: bool,
    pub deprecated: bool,
    pub diacritic: bool,
    pub east_asian_width: EastAsianWidth,
    pub extender: bool,
    pub general_category: GeneralCategory,
    pub grapheme_base: bool,
    pub grapheme_cluster_break: GraphemeClusterBreak,
    pub grapheme_extend: bool,
    pub hangul_syllable_type: HangulSyllableType,
    pub hex_digit: bool,
    pub id_continue: bool,
    pub id_start: bool,
    pub ideographic: bool,
    pub ids_binary_operator: bool,
    pub ids_trinary_operator: bool,
    pub indic_matra_category: Option<String>,
    pub indic_positional_category: IndicPositionalCategory,
    pub indic_syllabic_category: IndicSyllabicCategory,
    pub jamo_short_name: JamoShortName,
    pub join_control: bool,
    pub joining_group: JoiningGroup,
    pub joining_type: JoiningType,
    pub linebreak: Linebreak,
    pub logical_order_exception: bool,
    pub lowercase: bool,
    pub lowercase_mapping: Vec<u32>,
    pub math: bool,
    pub name: String,
    pub name1: String,
    pub noncharacter: bool,
    pub numeric_type: NumericType,
    pub numeric_value: Option<NumericValue>,
    pub pattern_syntax: bool,
    pub pattern_white_space: bool,
    #[serde(rename = "quickCheckNFC")]
    pub quick_check_nfc: YN,
    #[serde(rename = "quickCheckNFD")]
    pub quick_check_nfd: YN,
    #[serde(rename = "quickCheckNFKC")]
    pub quick_check_nfkc: YN,
    #[serde(rename = "quickCheckNFKD")]
    pub quick_check_nfkd: YN,
    pub quotation_mark: bool,
    pub radical: bool,
    pub script: Script,
    pub script_extensions: Vec<Script>,
    pub sentence_break: SentenceBreak,
    pub sentence_terminal: bool,
    pub simple_lowercase_mapping: u32,
    pub simple_titlecase_mapping: u32,
    pub simple_uppercase_mapping: u32,
    pub soft_dotted: bool,
    pub terminal_punctuation: bool,
    pub titlecase_mapping: Vec<u32>,
    pub unified_ideographic: bool,
    pub uppercase: bool,
    pub uppercase_mapping: Vec<u32>,
    pub variation_selector: bool,
    pub version: String,
    pub white_space: bool,
    pub word_break: WordBreak,
    pub xid_continue: bool,
    pub xid_start: bool,
}
